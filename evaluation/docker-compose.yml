services:
  db:
    build:
      context: .
      dockerfile: ./database/mysql/Dockerfile
    container_name: mysql-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/mysql/mysql_initial.sql:/docker-entrypoint-initdb.d/initial.sql

  eureka-server:
    build: ./eureka-server
    container_name: eureka-server
    restart: unless-stopped
    ports:
      - "8761:8761"

  microservice-mysql-springdatajpa:
    build:
      context: .
      dockerfile: microservice-mysql-springdatajpa/Dockerfile
    container_name: ms-mysql-springdatajpa
    restart: unless-stopped
    environment:
      MYSQL_HOST: db
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/${MYSQL_DATABASE}
      EUREKA_URL: http://eureka-server:8761/eureka
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy

  microservice-mysql-jdbc:
    build:
      context: .
      dockerfile: microservice-mysql-jdbc/Dockerfile
    container_name: ms-mysql-jdbc
    restart: unless-stopped
    environment:
      MYSQL_HOST: db
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/${MYSQL_DATABASE}
      EUREKA_URL: http://eureka-server:8761/eureka
    ports:
      - "8081:8080"
    depends_on:
      db:
        condition: service_healthy

  microservice-mysql-mybatis:
    build:
      context: .
      dockerfile: microservice-mysql-mybatis/Dockerfile
    container_name: ms-mysql-mybatis
    restart: unless-stopped
    mem_limit: 4096m
    environment:
      MYSQL_HOST: db
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/${MYSQL_DATABASE}
      EUREKA_URL: http://eureka-server:8761/eureka
    ports:
      - "8082:8080"
    depends_on:
      db:
        condition: service_healthy

  microservice-mysql-cayenne:
    build:
      context: .
      dockerfile: microservice-mysql-cayenne/Dockerfile
    container_name: ms-mysql-cayenne
    restart: unless-stopped
    environment:
      MYSQL_HOST: db
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/${MYSQL_DATABASE}
      EUREKA_URL: http://eureka-server:8761/eureka
    ports:
      - "8083:8080"
    depends_on:
      db:
        condition: service_healthy

  microservice-mysql-jooq:
    build:
      context: .
      dockerfile: microservice-mysql-jooq/Dockerfile
    container_name: ms-mysql-jooq
    restart: unless-stopped
    environment:
      MYSQL_HOST: db
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/${MYSQL_DATABASE}
      EUREKA_URL: http://eureka-server:8761/eureka
    ports:
      - "8084:8080"
    depends_on:
      db:
        condition: service_healthy

  microservice-mysql-ebean:
    build:
      context: .
      dockerfile: microservice-mysql-ebean/Dockerfile
    container_name: ms-mysql-ebean
    restart: unless-stopped
    environment:
      MYSQL_HOST: db
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/${MYSQL_DATABASE}
      EUREKA_URL: http://eureka-server:8761/eureka
    ports:
      - "8085:8080"
    depends_on:
      db:
        condition: service_healthy

  orchestrator:
    build: ./orchestrator
    container_name: orchestrator
    restart: unless-stopped
    environment:
      EUREKA_URL: http://eureka-server:8761/eureka
    ports:
      - "8100:8080"
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build: ./frontend
    container_name: frontend
    restart: unless-stopped
    environment:
      VITE_ORCHESTRATOR_API_URL: http://orchestrator:8080
    ports:
      - "3000:80"

volumes:
  mysql_data:
